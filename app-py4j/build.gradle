plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'application'
}

apply plugin: 'java'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

configurations {
    inclusion
}

dependencies {
    //Lombok and logging
    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    implementation 'org.slf4j:slf4j-api:2.0.0-alpha7'
    implementation 'ch.qos.logback:logback-classic:1.3.0-alpha14'
    implementation 'ch.qos.logback:logback-core:1.3.0-alpha14'

    implementation 'net.sf.py4j:py4j:0.10.9.5'
	implementation project(':lib-adaboost')
	
	//Fat jar
    inclusion 'org.slf4j:slf4j-api:2.0.0-alpha7'
    inclusion 'ch.qos.logback:logback-classic:1.3.0-alpha14'
    inclusion 'ch.qos.logback:logback-core:1.3.0-alpha14'
    inclusion 'net.sf.py4j:py4j:0.10.9.5'
	
}

configurations.implementation.setCanBeResolved(true)

jar {
  manifest { 
    attributes ("Main-Class": "vkmbox.classifier.py4j_starter.Py4jStarter",
	            "Class-Path": "app-py4j.jar;lib-adaboost.jar"
			   )
  }

  duplicatesStrategy = DuplicatesStrategy.EXCLUDE

  from {
    configurations.inclusion.collect { it.isDirectory() ? it : zipTree(it) }
  }
}
